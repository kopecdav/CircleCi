/*
 * nat64_dri.h
 *
 *  Created on: 8. 6. 2017
 *      Author: martin
 */

#ifndef SOURCE_NAT64_DRI_H_
#define SOURCE_NAT64_DRI_H_

#include "mbed_interface.h"
#include "pbuf.h"

#define NAT64_DEBUG_ENABLED 0
#if NAT64_DEBUG_ENABLED
		#define NAT64_DEBUG(...);			printf(__VA_ARGS__);
#else
		#define NAT64_DEBUG(...);			{}
#endif


#define NAT64_LIST_SIZE 10
#define START_PORT 51000
#define STOP_PORT START_PORT+NAT64_LIST_SIZE
#define NAT_PREFIX  {0x00,0x64,0xFF,0x9B,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00}

#define NAT64_SEND_LOWPAN_OK 0
#define NAT64_SEND_LOWPAN_FAIL 1
#define NAT64_FULL 2
#define NAT64_SEND_ETH_OK 3
#define NAT64_SEND_ETH_FAIL 4

#define NAT64_UDP_PORT_START 0xfbff        //corresponds with UDP_LOCAL_PORT_RANGE_END in lwip_udp.c
#define NAT64_MAX_UDP_PORTS 0xffff - NAT64_UDP_PORT_START         //corresponds with UDP_LOCAL_PORT_RANGE_END in lwip_udp.c
#define NAT64_TCP_PORT_START 0xfbff        //corresponds with TCP_LOCAL_PORT_RANGE_END in lwip_tcp.c
#define NAT64_TIMEOUT 45000        //timeout in seconds

typedef struct NAT64row_t{
    uint32_t ipv4;        //peer ipv4 ex. 8.8.8.8
    uint16_t port4;        //peer port ex. 8080
    uint8_t ipv6[16];    //local ipv6
    uint16_t port6;        //local port - ussually randomly generated by initiator ex. 3422
    uint16_t pseudoport;    //pseudo port example 51000 (from START_PORT to STARTPORT+NAT64_LIST_SIZE)
    uint32_t timeout;    //since last use
    uint8_t in_use;
} NAT64row;
/*Example of NATrow use
 *
 * lowpan device sends IPv6 packet
 * this packet has IPv6 addresses and ports:
 * 	- source address is IPv6 address of device
 * 	- destination address is 96bit NAT64 prefix + 32bit IPv4 address
 * 	- source port is ussually randomly generated by device - but for two devices it may be in conflict
 * 	- destination port should not be changed (for example 8080 for HTTP)
 *
 * table stores:
 * 	- IPv6 address of device
 * 	- destination IPv4 address
 * 	- original source port
 * 	- destination port
 * 	- pseudoport - is generated by NAT and should unique
 *
 * NAT64 sends to IPv4:
 * 	- destination address is destination address of IPv6 packet without NAT prefix
 * 	- source address is IPv4 address of device
 * 	- source port is pseudoport
 * 	- destination port is not changed
 *
 * IPv4 server should:
 * 	- swaps source and destination addresses and ports
 *
 * NAT64 recieves from IPv4:
 * 	- source address is server address > by adding NAT prefix translated to IPv6 address
 * 	- destination address is NAT device address > translated to device address by table
 * 	- source port is service port (8080 etc) > not changed
 * 	- destination port is pseudoport > translated to original source port
 *
 */


#if defined (__cplusplus)
extern "C" {
#endif

#include "pbuf.h"
#include "ip4_addr.h"

NAT64row *nat64_check(struct pbuf *p);
int8_t nat64_convert_4to6(NAT64row *myrow,uint8_t *p, uint16_t *len);
uint8_t nat64_convert_6to4(uint8_t *p, uint16_t *len,ip4_addr_t *dest_ip,ip4_addr_t src);
uint16_t nat64_create_row(uint32_t ipv4, uint8_t *ipv6, uint16_t portd4, uint16_t port6,uint8_t type);
void nat64_update_table();
void nat64_feed(uint32_t feed);
void nat64_print_table();
void nat64_print_tcp_table();
void nat64_print_udp_table();
void nat64_init_tcp_table();
void nat64_init_udp_table();
void nat64_udp_del(uint16_t index);
uint8_t nat64_input(struct pbuf *p);
#if defined (__cplusplus)
}
#endif
#endif /* SOURCE_NAT64_DRI_H_ */
